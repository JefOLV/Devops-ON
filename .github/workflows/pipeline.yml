name: pipeline

on:
  push:

jobs:
  unit-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - run: mvn test

    - name: Generate JaCoCo Badge
      id: jacoco
      uses: cicirello/jacoco-badge-generator@v2.0.1

    - name: Log coverage percentage
      run: |
        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
        echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

    - name: Upload JaCoCo coverage report
      uses: actions/upload-artifact@v4.4.0
      with:
        name: jacoco-report
        path: target/site/jacoco/

  code-analisys:
    runs-on: ubuntu-latest
    needs: unit-test

    steps:
    - uses: actions/checkout@v3  # Mudei para a vers達o mais recente
      with:
        fetch-depth: 0

    - name: Set up JDK 11
      uses: actions/setup-java@v2  # Atualizado para a vers達o mais recente
      with:
        java-version: 11

    - name: Cache SonarCloud packages
      uses: actions/cache@v3  # Atualizado para a vers達o mais recente
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache Maven packages
      uses: actions/cache@v3  # Atualizado para a vers達o mais recente
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify sonar:sonar \
        -Dsonar.projectKey=YOUR_PROJECT_KEY \
        -Dsonar.organization=YOUR_ORGANIZATION_KEY \
        -Dsonar.host.url=https://sonarcloud.io \
        -Dsonar.qualitygate.wait=true

  build:
    runs-on: ubuntu-latest
    needs: code-analisys
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Build with Maven
      run: mvn -B package -DskipTests --file pom.xml

    - name: Display structure of downloaded files
      run: ls -R
      working-directory: target/

    - name: Upload JAR
      uses: actions/upload-artifact@v4.4.0
      with:
        name: artifact
        path: ./target/demo-0.0.2.7-SNAPSHOT.jar

    - name: Package
      run: mvn package

