name: CI Pipeline

on:
  push:
    branches:
      - main
      - develop

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run Snyk to check for vulnerabilities
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}  # Adicione seu token do Snyk aqui
        run: |
          npm install -g snyk  # Instala o Snyk globalmente
          snyk test  # Realiza a verificação de vulnerabilidades

      - name: SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Adicione seu token do SonarQube aqui
        run: mvn clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.projectKey=devopsfiap_devopsimpacta \
          -Dsonar.host.url=http://your-sonarqube-server-url \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}  # Autenticação

  unit-test:
    runs-on: ubuntu-latest
    needs: analyze
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run unit tests
        run: mvn test

  build:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Package application
        run: mvn package

